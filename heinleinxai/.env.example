####################################
#### Server & DB Configurations ####
####################################

# Cache Configs
CACHE_STORE=database # Defaults to database. Other available cache store: redis and filesystem
REDIS_URL=           # Redis URL - could be a local redis instance or cloud hosted redis. Also support rediss:// URLs
PGLITE_DATA_DIR=     #../pgLite/ if selecting a directory   --- or memory:// if selecting in memory

SERVER_PORT=3000

# Supabase Configuration
SUPABASE_URL=
SUPABASE_ANON_KEY=

# MongoDB
MONGODB_CONNECTION_STRING=             #mongodb connection string
MONGODB_DATABASE=                      #name of the database in mongoDB atlas #default: 'elizaAgent'

# Comma separated list of remote character urls (optional)
REMOTE_CHARACTER_URLS=

USE_CHARACTER_STORAGE=false

# Logging
DEFAULT_LOG_LEVEL=warn
LOG_JSON_FORMAT=false            

# BitMind Bittensor API
BITMIND=true
BITMIND_API_TOKEN=


FARCASTER_DRY_RUN=false       # Set to true if you want to run the bot without actually publishing casts
FARCASTER_POLL_INTERVAL=120   # How often (in seconds) the bot should check for farcaster interactions (replies and mentions)

# Telegram Configuration
TELEGRAM_BOT_TOKEN=


# Twitter/X Configuration
TWITTER_DRY_RUN=false
TWITTER_USERNAME= # Account username
TWITTER_PASSWORD= # Account password
TWITTER_EMAIL=    # Account email
TWITTER_2FA_SECRET=
TWITTER_POLL_INTERVAL=120   # How often (in seconds) the bot should check for interactions
TWITTER_SEARCH_ENABLE=FALSE # Enable timeline search, WARNING this greatly increases your chance of getting banned
TWITTER_TARGET_USERS=       # Comma separated list of Twitter user names to interact with
TWITTER_RETRY_LIMIT=        # Maximum retry attempts for Twitter login
TWITTER_SPACES_ENABLE=false # Enable or disable Twitter Spaces logic
TWITTER_ENDPOINT_DB_URL=    # URL of the endpoint database (e.g., http://localhost:3000/api/endpoint)
# Post Interval Settings (in minutes)
POST_INTERVAL_MIN= # Default: 90
POST_INTERVAL_MAX= # Default: 180
POST_IMMEDIATELY=  # Default: false
# Twitter action processing configuration
ACTION_INTERVAL=               # Interval in minutes between action processing runs (default: 5 minutes)
ENABLE_ACTION_PROCESSING=false # Set to true to enable the action processing loop
MAX_ACTIONS_PROCESSING=1       # Maximum number of actions (e.g., retweets, likes) to process in a single cycle. Helps prevent excessive or uncontrolled actions.
ACTION_TIMELINE_TYPE=foryou    # Type of timeline to interact with. Options: "foryou" or "following". Default: "foryou"
# CONFIGURATION FOR APPROVING TWEETS BEFORE IT GETS POSTED
TWITTER_APPROVAL_DISCORD_CHANNEL_ID=  # Channel ID for the Discord bot to listen and send approval messages
TWITTER_APPROVAL_DISCORD_BOT_TOKEN=   # Discord bot token (this could be a different bot token from DISCORD_API_TOKEN)
TWITTER_APPROVAL_ENABLED=             # Enable or disable Twitter approval logic #Default is false
TWITTER_APPROVAL_CHECK_INTERVAL=60000 # Default: 60 seconds


ENABLE_OPEN_AI_COMMUNITY_PLUGIN=false

# Eternal AI's Decentralized Inference API
ETERNALAI_URL=
ETERNALAI_MODEL=                    # Default: "NousResearch/Hermes-3-Llama-3.1-70B-FP8"
ETERNALAI_CHAIN_ID=8453            # Default: "8453"
ETERNALAI_RPC_URL=                  # Ex: https://mainnet.base.org/
ETERNALAI_AGENT_CONTRACT_ADDRESS=   # Ex: 0xAed016e060e2fFE3092916b1650Fc558D62e1CCC
ETERNALAI_AGENT_ID=                 # Ex: 1711
ETERNALAI_API_KEY=
ETERNALAI_LOG=false #Default: false


# Hyperbolic Plugin Configuration
HYPERBOLIC_ENV=production
HYPERBOLIC_API_KEY=
HYPERBOLIC_GRANULAR_LOG=true
HYPERBOLIC_SPASH=true
HYPERBOLIC_LOG_LEVEL=debug


# Livepeer configuration

LIVEPEER_GATEWAY_URL=https://dream-gateway.livepeer.cloud           # Free inference gateways and docs: https://livepeer-eliza.com/
IMAGE_LIVEPEER_MODEL=           # Default: ByteDance/SDXL-Lightning
SMALL_LIVEPEER_MODEL=           # Default: meta-llama/Meta-Llama-3.1-8B-Instruct
MEDIUM_LIVEPEER_MODEL=          # Default: meta-llama/Meta-Llama-3.1-8B-Instruct
LARGE_LIVEPEER_MODEL=           # Default: meta-llama/Meta-Llama-3.1-8B-Instruct

# Speech Synthesis
ELEVENLABS_XI_API_KEY= # API key from elevenlabs

# Transcription Provider
TRANSCRIPTION_PROVIDER= # Default: local (possible values: openai, deepgram, local)

# ElevenLabs Settings
ELEVENLABS_MODEL_ID=eleven_multilingual_v2
ELEVENLABS_VOICE_ID=21m00Tcm4TlvDq8ikWAM
ELEVENLABS_VOICE_STABILITY=0.5
ELEVENLABS_VOICE_SIMILARITY_BOOST=0.9
ELEVENLABS_VOICE_STYLE=0.66
ELEVENLABS_VOICE_USE_SPEAKER_BOOST=false
ELEVENLABS_OPTIMIZE_STREAMING_LATENCY=4
ELEVENLABS_OUTPUT_FORMAT=pcm_16000


# Grok Configuration
GROK_API_KEY=         # GROK/xAI API Key
SMALL_GROK_MODEL=     # Default: grok-2-1212
MEDIUM_GROK_MODEL=    # Default: grok-2-1212
LARGE_GROK_MODEL=     # Default: grok-2-1212
EMBEDDING_GROK_MODEL= # Default: grok-2-1212


# Solana Configuration
SOL_ADDRESS=So11111111111111111111111111111111111111112
SLIPPAGE=1
BASE_MINT=So11111111111111111111111111111111111111112
SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
HELIUS_API_KEY=

# Abstract Configuration
ABSTRACT_ADDRESS=
ABSTRACT_PRIVATE_KEY=
ABSTRACT_RPC_URL=https://api.testnet.abs.xyz


# Form Chain
FORM_PRIVATE_KEY= # Form character account private key
FORM_TESTNET=true # A flag indicating if connection is made to Form Testnet. Set to false for Mainnet connection.

CDP_AGENT_KIT_NETWORK=base-sepolia # Optional: Defaults to base-sepolia

# Squid Router
SQUID_SDK_URL=https://apiplus.squidrouter.com # Default: https://apiplus.squidrouter.com
SQUID_INTEGRATOR_ID=                          # get integrator id through https://docs.squidrouter.com/
SQUID_EVM_ADDRESS=
SQUID_EVM_PRIVATE_KEY=
SQUID_API_THROTTLE_INTERVAL=1000 # Default: 1000; Used to throttle API calls to avoid rate limiting (in ms)

# TEE Configuration
# TEE_MODE options:
# - LOCAL: Uses simulator at localhost:8090 (for local development)
# - DOCKER: Uses simulator at host.docker.internal:8090 (for docker development)
# - PRODUCTION: No simulator, uses production endpoints
# Defaults to OFF if not specified
TEE_MODE=OFF        # LOCAL | DOCKER | PRODUCTION
WALLET_SECRET_SALT= # ONLY define if you want to use TEE Plugin, otherwise it will throw errors
TEE_LOG_DB_PATH=    # Custom path for TEE Log database, default: ./data/tee_log.sqlite


# Galadriel Configuration
GALADRIEL_API_KEY=gal-* # Get from https://dashboard.galadriel.com/


####################################
#### Misc Plugin Configurations ####
####################################

# Intiface Configuration
INTIFACE_WEBSOCKET_URL=ws://localhost:12345


# EchoChambers Configuration
ECHOCHAMBERS_API_URL=http://127.0.0.1:3333
ECHOCHAMBERS_API_KEY=testingkey0011
ECHOCHAMBERS_USERNAME=eliza
ECHOCHAMBERS_ROOMS=general #comma delimited list of rooms the agent watches
ECHOCHAMBERS_POLL_INTERVAL=60
ECHOCHAMBERS_MAX_MESSAGES=10
# How often the agent checks if it should start a conversation
ECHOCHAMBERS_CONVERSATION_STARTER_INTERVAL=300 # 5 minutes - checks rooms every 5 minutes

# How long a room must be quiet before starting a new conversation
ECHOCHAMBERS_QUIET_PERIOD=900 # 15 minutes - waits for 15 minutes of silence

# B2 Network
B2_PRIVATE_KEY= # Private key of the B2 Network account to use for the agent

# Opacity zkTLS
OPACITY_TEAM_ID=f309ac8ae8a9a14a7e62cd1a521b1c5f
OPACITY_CLOUDFLARE_NAME=eigen-test
OPACITY_PROVER_URL=https://opacity-ai-zktls-demo.vercel.app

# Deva Configuration
DEVA_API_BASE_URL=https://api.deva.me # Default server url for production. Use https://api-staging.deva.me for staging.

# Verifiable Inference Configuration
VERIFIABLE_INFERENCE_ENABLED=false    # Set to false to disable verifiable inference
VERIFIABLE_INFERENCE_PROVIDER=opacity # Options: opacity


QDRANT_PORT=443
# Vector size matching your embedding model (default: 1536 for OpenAI embeddings)
QDRANT_VECTOR_SIZE=1536

# Autonome Configuration
AUTONOME_JWT_TOKEN=
AUTONOME_RPC=https://wizard-bff-rpc.alt.technology/v1/bff/aaa/apps

####################################
#### Akash Network Configuration ####
####################################
AKASH_ENV=mainnet
AKASH_NET=https://raw.githubusercontent.com/ovrclk/net/master/mainnet
RPC_ENDPOINT=https://rpc.akashnet.net:443
AKASH_GAS_PRICES=0.025uakt
AKASH_GAS_ADJUSTMENT=1.5
AKASH_KEYRING_BACKEND=os
AKASH_FROM=default
AKASH_FEES=20000uakt
AKASH_DEPOSIT=500000uakt
AKASH_MNEMONIC=
AKASH_WALLET_ADDRESS=
# Akash Pricing API
AKASH_PRICING_API_URL=https://console-api.akash.network/v1/pricing
# Default values # 1 CPU = 1000 1GB = 1000000000 1GB = 1000000000
AKASH_DEFAULT_CPU=1000
AKASH_DEFAULT_MEMORY=1000000000
AKASH_DEFAULT_STORAGE=1000000000
AKASH_SDL=example.sdl.yml
# Close deployment
# Close all deployments = closeAll
# Close a single deployment = dseq and add the value in AKASH_CLOSE_DSEQ
AKASH_CLOSE_DEP=closeAll
AKASH_CLOSE_DSEQ=19729929
# Provider Info we added one to check you will have to pass this into the action
AKASH_PROVIDER_INFO=akash1ccktptfkvdc67msasmesuy5m7gpc76z75kukpz
# Deployment Status
# AKASH_DEP_STATUS = dseq or param_passed when you are building you wil pass the dseq dinamically to test you
# you can pass the dseq using AKASH_DEP_DSEQ 19729929 is an example of a dseq we test while build.
AKASH_DEP_STATUS=dseq
AKASH_DEP_DSEQ=19729929
# Gas Estimation Options: close, create, or update
# qseq is required when operation is "close" 19729929 is an example of a dseq we test while build.
AKASH_GAS_OPERATION=close
AKASH_GAS_DSEQ=19729929
# Manifest
# Values: "auto" | "manual" | "validate_only" Default: "auto"
AKASH_MANIFEST_MODE=auto
# Default: Will use the SDL directory
AKASH_MANIFEST_PATH=
# Values: "strict" | "lenient" | "none" - Default: "strict"
AKASH_MANIFEST_VALIDATION_LEVEL=strict
# Quai Network Ecosystem
QUAI_PRIVATE_KEY=
QUAI_RPC_URL=https://rpc.quai.network

# Chainbase
CHAINBASE_API_KEY=demo # demo is a free tier key


# Instagram Configuration
INSTAGRAM_DRY_RUN=false
INSTAGRAM_USERNAME=               # Account username
INSTAGRAM_PASSWORD=               # Account password
INSTAGRAM_APP_ID=                 # Instagram App ID is required
INSTAGRAM_APP_SECRET=             # Instagram App Secret is required
INSTAGRAM_BUSINESS_ACCOUNT_ID=    # Optional Business Account ID for additional features
INSTAGRAM_POST_INTERVAL_MIN=60    # Default: 60 minutes
INSTAGRAM_POST_INTERVAL_MAX=120   # Default: 120 minutes
INSTAGRAM_ENABLE_ACTION_PROCESSING=false  # Enable/disable action processing
INSTAGRAM_ACTION_INTERVAL=5       # Interval between actions in minutes
INSTAGRAM_MAX_ACTIONS=1          # Maximum number of actions to process at once

####################################
#### Pyth Plugin Configuration ####
####################################
# Network Environment (mainnet or testnet)git
PYTH_NETWORK_ENV=mainnet

# Mainnet Network Configuration
PYTH_MAINNET_HERMES_URL=https://hermes.pyth.network
PYTH_MAINNET_WSS_URL=wss://hermes.pyth.network/ws
PYTH_MAINNET_PYTHNET_URL=https://pythnet.rpcpool.com
PYTH_MAINNET_CONTRACT_REGISTRY=https://pyth.network/developers/price-feed-ids
PYTH_MAINNET_PROGRAM_KEY=

# Testnet Network Configuration
PYTH_TESTNET_HERMES_URL=https://hermes.pyth.network
PYTH_TESTNET_WSS_URL=wss://hermes.pyth.network/ws
PYTH_TESTNET_PYTHNET_URL=https://pythnet.rpcpool.com
PYTH_TESTNET_CONTRACT_REGISTRY=https://pyth.network/developers/price-feed-ids#testnet
PYTH_TESTNET_PROGRAM_KEY=

# Connection Settings
PYTH_MAX_RETRIES=3
PYTH_RETRY_DELAY=1000
PYTH_TIMEOUT=5000
PYTH_GRANULAR_LOG=true
PYTH_LOG_LEVEL=debug
PYTH_LOG_LEVEL=info

# Runtime Settings
RUNTIME_CHECK_MODE=false

# Pyth Price Streaming and test ID
PYTH_ENABLE_PRICE_STREAMING=true
PYTH_MAX_PRICE_STREAMS=2
PYTH_TEST_ID01=0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43
PYTH_TEST_ID02=0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace


# OriginTrail DKG
DKG_ENVIRONMENT=""
# Values: "development", "testnet", "mainnet"
DKG_HOSTNAME=""
DKG_PORT="8900"
DKG_PUBLIC_KEY=""
DKG_PRIVATE_KEY=""
DKG_BLOCKCHAIN_NAME=""
# Values: (mainnet) "base:8453", "gnosis:100", "otp:2043" (testnet) "base:84532", "gnosis:10200", "otp:20430"

# Initia Plugin Configuration
INITIA_PRIVATE_KEY=  # Your Initia wallet private key
INITIA_NODE_URL=  # Initia node URL (default: testnet)
INITIA_CHAIN_ID=initia-test  # Chain ID (default: testnet)

# ####################################
# #### NVIDIA Configuration ##########
# ####################################
NVIDIA_NIM_ENV=production
NVIDIA_NIM_SPASH=false
# Api Keys
NVIDIA_NIM_API_KEY=
NVIDIA_NGC_API_KEY=
NVIDIA_NIM_MAX_RETRIES=3
NVIDIA_NIM_RETRY_DELAY=1000
NVIDIA_NIM_TIMEOUT=5000
# Logging Configuration
NVIDIA_GRANULAR_LOG=true
NVIDIA_LOG_LEVEL=debug
# NVIDIA Off-topic system and user configuration
NVIDIA_OFFTOPIC_SYSTEM=
NVIDIA_OFFTOPIC_USER=
# NVIDIA Cosmos Model Configuration
NVIDIA_NIM_BASE_VISION_URL=https://ai.api.nvidia.com/v1/vlm
NVIDIA_COSMOS_MODEL=nvidia/cosmos-nemotron-34b
NVIDIA_COSMOS_INVOKE_URL=https://ai.api.nvidia.com/v1/vlm/nvidia/cosmos-nemotron-34b
NVIDIA_COSMOS_ASSET_URL=https://api.nvcf.nvidia.com/v2/nvcf/assets
NVIDIA_COSMOS_MAX_TOKENS=1000

# Email Plugin Configuration

# Outgoing Email Settings (SMTP/Gmail)
EMAIL_OUTGOING_SERVICE=smtp    # Use "smtp" or "gmail"
EMAIL_OUTGOING_HOST=smtp.example.com    # Required for SMTP only
EMAIL_OUTGOING_PORT=465    # Default 465 for secure SMTP, 587 for TLS
EMAIL_OUTGOING_USER=
EMAIL_OUTGOING_PASS=  # For Gmail, use App Password

# Incoming Email Settings (IMAP)
EMAIL_INCOMING_SERVICE=imap
EMAIL_INCOMING_HOST=imap.example.com
EMAIL_INCOMING_PORT=993    # Default port for secure IMAP
EMAIL_INCOMING_USER=
EMAIL_INCOMING_PASS=


# Hyperliquid Api
HYPERLIQUID_PRIVATE_KEY=    # Required for trading and cancelling orders, your_private_key
HYPERLIQUID_TESTNET=        # Optional, defaults to false; true or false

# Lit Protocol
FUNDING_PRIVATE_KEY=    # Private key for funding transactions in Lit Protocol
EVM_RPC_URL=                # RPC endpoint URL for blockchain interactions

# EthStorage DA Configuration
ETHSTORAGE_PRIVATE_KEY=
ETHSTORAGE_ADDRESS=0x64003adbdf3014f7E38FC6BE752EB047b95da89A
ETHSTORAGE_RPC_URL=https://rpc.beta.testnet.l2.quarkchain.io:8545


# Email Automation Plugin Configuration
RESEND_API_KEY=           # Your Resend API key
DEFAULT_TO_EMAIL=         # Default recipient
DEFAULT_FROM_EMAIL=       # Default sender

# Optional Settings
EMAIL_AUTOMATION_ENABLED=false    # Enable AI detection. If this is enabled, the plugin will automatically detect email-worthy conversations and handle generation/delivery and only that.
EMAIL_EVALUATION_PROMPT=        # Custom detection criteria for shouldEmail# ####################################


# #### ANKR Configuration ####
# ####################################
ANKR_ENV=production
ANKR_WALLET=
ANKR_MAX_RETRIES=3
ANKR_RETRY_DELAY=1000
ANKR_TIMEOUT=5000
ANKR_GRANULAR_LOG=true
ANKR_LOG_LEVEL=debug
ANKR_RUNTIME_CHECK_MODE=false
ANKR_SPASH=true

# DCAP Plugin Configuration
DCAP_EVM_PRIVATE_KEY=
DCAP_MODE=                       # Options: OFF, PLUGIN-SGX, PLUGIN-TEE, MOCK


# BTCFUN Plugin Configuration
BTCFUN_API_URL=                  # Default: https://api-testnet-new.btc.fun
BTC_PRIVATE_KEY_WIF=             # Your BTC private key in WIF format
BTC_ADDRESS=                     # Your BTC address
BTC_MINT_CAP=10000              # Maximum amount that can be minted
BTC_MINT_DEADLINE=864000        # Deadline for minting in seconds
BTC_FUNDRAISING_CAP=100         # Maximum amount for fundraising

# PostGre Database Configuration
DATABASE_URL= # PostGreSQL database URL
